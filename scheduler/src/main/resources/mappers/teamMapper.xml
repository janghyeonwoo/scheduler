<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="team">

<!--팀등록  -->
	<insert id="insertteam" useGeneratedKeys="true" keyProperty="tbno" parameterType="com.spring.scheduler.team.dto.TeamDTO">
	
		insert into team (
						teamMaster,
						teamIntroduce, 
						      teamName,
							  category,
						   teamContent,
						   teamHashTag,
						  participants,
						  allowSearch,
						  endday
						  )
	  	VALUES(
	  		#{teamMaster},
			#{teamIntroduce}, 
			#{teamName},
			#{category},
			#{teamContent},
			#{teamHashTag},
			#{participants},
			#{allowSearch},
			#{endDay}
	  	)
		
	</insert>
	
	
	
	<!--팀등록 -->
	
	<insert id ="insertmember">
		insert into team_member(tbno,uid, authority) values(#{tbno}, #{uid},#{authority}) 
		
	</insert>
	
	<!--팀 썸네일 등록 -->	
	<insert id="insertthumbnail">
		insert into thumbnail(tbno,uuid,path,filename,mainThumbnail,backThumbnail)  values(#{tbno},#{uuid},#{path},#{filename},#{mainThumbnail},#{backThumbnail})	
	</insert>
	<!--팀리스트 가져오기 -->
    <select id="teamlist" resultType="com.spring.scheduler.team.dto.TeamDTO">
		SELECT  t.tbno,
			    t.teamName,
			    t.category,
				t.teamContent,
				t.teamHashTag,
				t.participants,
				membercount.num 
		FROM (SELECT * , Row_Number() OVER (order by tbno desc ) AS rownum FROM team ORDER BY team.startday DESC , team.tbno DESC  ) t , 
			 (SELECT tbno ,COUNT(*) AS num FROM team_member GROUP BY tbno) membercount
		
		WHERE t.tbno = membercount.tbno AND rownum BETWEEN #{start} AND #{end} ORDER BY t.startday desc
	    	
    
    </select>
    
    <!--팀 상세정보 페이지에서 썸네일 가져오기  -->
    <select id="selectthumbnail" resultType="com.spring.scheduler.team.dto.ThumbnailDTO">
    	select * from thumbnail where tbno = #{tbo}
    </select>
    <!--팀 상세정보 페이지에서 팀상세정보 가져오기  -->
    <select id= "selectteamdetail" resultType="com.spring.scheduler.team.dto.TeamDTO">
    	<!-- SELECT *, (SELECT name from user WHERE  uid IN (SELECT uid FROM team_member WHERE tbno=#{tbno} and authority ='master') ) as master 
    	from team where tbno = #{tbno} -->
    	
    	SELECT team.* , (SELECT COUNT(*) AS num FROM team_member where tbno=#{tbno} GROUP BY tbno) AS num , (SELECT NAME from user WHERE  uid IN (SELECT uid FROM team_member WHERE tbno=#{tbno} and authority ='master')) as masterName 
    	from team where tbno = #{tbno} 
    </select>
    
     
     
     
     <select id="selectexistingmember" resultType="String">
     	SELECT uid FROM team_member WHERE tbno = #{tbno} AND uid = #{uid}
     </select>
     
     <select id="selectexistingapply" resultType="String">
     	SELECT uid FROM team_apply WHERE tbno = #{tbno} AND uid = #{uid}
     </select>
     
     
    <insert id="insertteamapply">
    	INSERT INTO team_apply(tbno, uid) VALUE(#{tbno} , #{uid})
    </insert>


	<resultMap id="postReply"
		type="com.spring.scheduler.team.dto.TeamDTO">
		<id property="teamName" column="teamName" />
		<id property="teamIntroduce" column="teamIntroduce" />
		<id property="tbno" column="tbno" />
		<collection property="thumbnailList" ofType="com.spring.scheduler.team.dto.ThumbnailDTO">
			<result property="uuid" column="uuid" />
			<result property="filename" column="fileName" />
			<result property="path" column="path" />

		</collection>
	</resultMap>
    
    
    
    <select id="selectwaitingteamlist" resultMap="postReply" >
    	SELECT team.teamName , team.teamIntroduce ,  thumbnail.*  from team_apply inner join team ON team.tbno = team_apply.tbno  INNER JOIN thumbnail ON team.tbno = thumbnail.tbno WHERE thumbnail.mainThumbnail = 'Y'
    </select>
</mapper>














